#!/bin/bash

#Name: Joshua Yu
#Student Number: 323 5184
#Last Modified: 1/08/2012

#This script is the File Management Features

#See information about files
#Should be able to delete a file or directory
#Modify the file permissions of a file and directory


PRINTF=/usr/bin/printf
RM="/usr/bin/rm -rf"
LS="/bin/ls"
CHMOD=/usr/bin/chmod


##########################################################################
#Used to append logging operations to assistant.log
#parameters passed in are: operation and Statuscode from operation.
#currrent user and date are auto generated in the function, no passing req
function log ()
{
	local currentUser=`/usr/ucb/whoami`
	local operation=$1
	local status=$2
	local timeStamp=$(date +%F\|%T)
	$PRINTF "$timeStamp | $currentUser | Status Code: $status | $operation| \n" >> assistant.log
} #end log
##########################################################################

##########################################################################
#Function in charge of retriving user input
#Function returns the output to wherever is called
function userInput ()
{
	read "rawInput"
	local input=$rawInput
	echo "$input"
} #end userInput
##########################################################################

##########################################################################
#
#
function menu ()
{
	$PRINTF '1. Display File Information\n'
	$PRINTF '2. Delete a File or Directory \n'
	$PRINTF '3. Modify File or Directory Permissions\n\n'
	$PRINTF 'Enter option: '
} #end menu
##########################################################################

##########################################################################
#
#
function choice ()
{
	case $(userInput) in
	1) information ;;
	2) delete;; 	
	3) permission ;;
	*) $PRINTF 'Unknown Selection\n\n' ;;
esac
} #end choice
##########################################################################

##########################################################################
#

function information ()
{
	$PRINTF 'Enter File or directory path\n'
	local path=$(userInput)
	
	# checks ps if the path is a directory
	if [ -d "$path" ]; then

	#count extentions
	$LS -l $path | grep ^- | cut -d. -f2 | grep -v "^-" | uniq -c
	log "Display directory Information for "$path"" "$?"
	#unknown file counter
	local unknownCount=`$LS -l $path | grep ^- | grep -v "\." | wc -l`
	$PRINTF "$unknownCount Unknown Files (no extension)\n"

	else
	# display permission, owner and size of the file
	$LS -lh "$path" | awk '{printf "%-15s%-10s%-5s %s\n" , $1, $3, $5, $9}'
	log "Display File Information for "$path"" "$?"
	# its an regular file then only print that file details
	fi

log "Display File or directory Information for "$path"" "$?"


} #end information
##########################################################################

##########################################################################
#Uses rm -rf command to remove the file or directory the user specifies
# 
function delete ()
{
	$PRINTF 'Enter File or directory path to delete \n'
	local path=$(userInput)
	$RM "$path"

	log "Delete File $path" "$?"
} #end delete
##########################################################################

##########################################################################
#
#
function permission ()
{
	$PRINTF 'Enter File or directory path\n'
	local path=$(userInput)
	$PRINTF 'Enter Octal permission numbers \n'
	local permission=$(userInput)
	$CHMOD "$permission" "$path"
	log "Change permission of $path to $permission" "$?"

} #end permissions

##########################################################################
menu
choice